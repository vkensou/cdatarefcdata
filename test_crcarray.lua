local crc = require("crcarray")
require("struct_define")
local ffi = require("ffi")

local function createC()
	local c = crc.start("struct C")
	crc.setValue(c, "int", "id", 987)
	crc.setString(c, "name", "name")
	local b = crc.malloc("struct B")
	crc.setReference(c, "b", b)
	crc.setValue(b, "int", "id", 654)
	crc.setString(b, "name", "name")
	local a = crc.createReference(b, "struct A", "a")
	crc.setValue(a, "int", "ok", true)
	crc.setString(a, "name", "name")
	local f = function() print("call back") end
	crc.setCallback(a, "CB", "cb", f)
	return crc.complete()
end

local c, chunk, cbs = createC()

collectgarbage("collect")
collectgarbage("collect")
collectgarbage("collect")
collectgarbage("collect")
collectgarbage("collect")

print(chunk)
print(c)
print(c.name)
print(ffi.string(c.name))
print(c.id)
print(c.b)
print(c.b.id)
print(ffi.string(c.b.name))
print(c.b.a.ok)
print(c.b.a.name)
print(ffi.string(c.b.a.name))
print(c.b.a.cb)
c.b.a.cb()